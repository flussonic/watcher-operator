apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    name: postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: "postgres:15.3"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: test
        - name: POSTGRES_PASSWORD
          value: test
        - name: POSTGRES_DB
          value: test_c
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1
          failureThreshold: 2
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 30
---
apiVersion: media.flussonic.com/v1alpha1
kind: Watcher
metadata:
  labels:
    app.kubernetes.io/name: watcher
    app.kubernetes.io/instance: watcher-sample
    app.kubernetes.io/part-of: watcher-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: watcher-operator
  name: watcher-sample
spec:
  central: "http://central.default.svc.cluster.local"
  database: "postgresql://test:test@postgres.default.svc.cluster.local:5432/test_c"
  image: "flussonic/watcher:v24.03-2"
  env:
    - name: LICENSE_KEY
      valueFrom:
        secretKeyRef:
          name: flussonic-license
          key: license_key
          optional: false
    - name: WATCHER_ADMIN_LOGIN
      valueFrom:
        secretKeyRef:
          name: flussonic-license
          key: login
          optional: false
    - name: WATCHER_ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          name: flussonic-license
          key: pass
          optional: false
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: watcher-sample
spec:
  defaultBackend:
    service:
      name: watcher-sample-web
      port:
        number: 80
